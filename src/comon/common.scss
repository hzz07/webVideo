@function px2em($px, $base-font-size: 16px) {
  @if (unitless($px)) {
    @warn "Assuming #{$px} to be in pixels, attempting to convert it into pixels for you";
    @return px2em($px + 0px);
    // That may fail.
  } @else if (unit($px) == em) {
    @return $px;
  }
  @return ($px / $base-font-size) * 1em;
}

@mixin border-t-1px ($color) {
  position: relative;
  &::before{
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    border-top:1px solid $color;
    content:'';
  }
}
@mixin border-t-1px ($color) {
  position: relative;
  &::after{
    display: block;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    border-top:1px solid $color;
    content:'';
  }
}

@media(-webkit-min-device-pixel-ratio: 1.5), (min-device-pixel-ratio: 1.5) {
  .border-t-1px {
    &::before {
      -webkit-transform: scaleY(0.7);
      transform: scaleY(0.7);
    }
  }
}

@media(-webkit-min-device-pixel-ratio: 2), (min-device-pixel-ratio: 2) {
  .border-t-1px {
    &::before {
      -webkit-transform: scaleY(0.5);
      transform: scaleY(0.5);
    }
  }
}

@media(-webkit-min-device-pixel-ratio: 2.5), (min-device-pixel-ratio: 2.5) {
  .border-t-1px {
    &::before {
      -webkit-transform: scaleY(0.33333334);
      transform: scaleY(0.33333334);
    }
  }
}

@media(-webkit-min-device-pixel-ratio: 1.5), (min-device-pixel-ratio: 1.5) {
  .border-b-1px {
    &::after {
      -webkit-transform: scaleY(0.7);
      transform: scaleY(0.7);
    }
  }
}

@media(-webkit-min-device-pixel-ratio: 2), (min-device-pixel-ratio: 2) {
  .border-b-1px {
    &::after {
      -webkit-transform: scaleY(0.5);
      transform: scaleY(0.5);
    }
  }
}

@media(-webkit-min-device-pixel-ratio: 2.5), (min-device-pixel-ratio: 2.5) {
  .border-b-1px {
    &::after {
      -webkit-transform: scaleY(0.33333334);
      transform: scaleY(0.33333334);
    }
  }
}
